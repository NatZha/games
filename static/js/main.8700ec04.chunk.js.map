{"version":3,"sources":["components/Button.js","components/Navbar.js","components/pages/Home.js","components/pages/test.js","components/pages/abcde.js","components/pages/TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","className","onclick","Navbar","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","Home","href","target","rel","test","abcde","props","incomingStream","value","letter","letterArray","time","state","typingDisabled","gameReset","bind","handleChange","updateState","nextLetterIterator","gameStarting","runningTime","incrTime","alphabet","e","this","replace","at","toUpperCase","timeStamp","gameLogic","Array","from","document","querySelectorAll","forEach","input","Object","keys","map","item","time_running","NaN","time_incr","console","log","setState","latestLetter","initialTime","Date","getTime","length","gameEnd","name","color","style","setStyle","_","index","time_reverse","letter_reverse","prev_time_reverse","id","onKeyUp","displayAlphabet","onChange","disabled","displayPerLetterTime","Component","Square","Board","i","squares","renderSquare","React","calculateWinner","lines","a","b","c","TicTacToe","history","fill","stepNumber","xIsNext","slice","concat","step","status","current","winner","moves","move","desc","jumpTo","handleClick","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8700ec04.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// array for selecting styles of the button\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\n// array for sizes of the button\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({children, type, onClick, buttonStyle, buttonSize}) => {\r\n\r\n    // checks if the button style is correct, autostyles to primary\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n    //  checks if the button sized correctly, autosizesto medium\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return (\r\n        <Link to='/games/test/' className='btn-mobile'>\r\n\r\n            {/* creates a button when automatically checks style and size. Characteristics onClick and is of type declared */}\r\n            <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onclick={onClick} type={type}>\r\n                {/* whatever the variable children is will be displayed */}\r\n                {children}\r\n            </button>\r\n        </Link>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { FaTimes, FaBars, FaTypo3} from 'react-icons/fa';\r\nimport { Button } from './Button';\r\nimport './Navbar.css';\r\n// var Link = require('react-router-dom').Link\r\n\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    // function used to update the state of the \r\n    const [click , setClick] = useState(false);\r\n    // create button \r\n    const [button, setButton] = useState(true);\r\n\r\n    // handleclick is an arrow function which reverses\r\n    const handleClick = () => setClick(!click);\r\n    // causes the menu to close by setting click to false\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    // display button dependent on whether mobile or full screen\r\n    const showButton = () => {\r\n        if(window.innerWidth <= 960){\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    }\r\n\r\n    // when refresshing, the signup button show up in the middle of the screen\r\n    // this is a hack way of getting rid of that problem\r\n    useEffect(() => {\r\n        showButton();\r\n    })\r\n\r\n    // create listener of the window to determine whether button shows up\r\n    // every time the window is resizes, runs the function showButton\r\n    window.addEventListener('resize', showButton)\r\n\r\n    return (\r\n        <>\r\n\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n\r\n                    {/* link does the same think as \"a\" in html */}\r\n                    <Link to=\"/games/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                        games <FaTypo3 className=\"fa-typo3\"/>\r\n                    </Link>\r\n\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        {/* if click is false, fas fa-times (cross icon) else fas fa-bars (burger icon) */}\r\n                        {click ? <FaTimes className=\"fa-times\"/> : <FaBars className=\"fa-bars\"/>}\r\n                    </div>\r\n\r\n                    {/* Create a closable menu  */}\r\n                    <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n\r\n                        {/* menu links to home */}\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/games/' className='nav-links' onClick={closeMobileMenu}>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n\r\n                        {/* menu links to TicTacToe */}\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/games/TicTacToe/' className='nav-links' onClick={closeMobileMenu}>\r\n                                TicTacToe\r\n                            </Link>\r\n                        </li>\r\n\r\n                        {/* menu links to abcde */}\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/games/abcde/' className='nav-links' onClick={closeMobileMenu}>\r\n                                abcde\r\n                            </Link>\r\n                        </li>\r\n\r\n                        {/* menu links to test */}\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/games/test/' className='nav-links-mobile' onClick={closeMobileMenu}>\r\n                                test\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    {/* implements the button, button component includes a function which makes it only show when the screen is wide enough*/}\r\n                    {button && <Button buttonStyle='btn--outline'>SIGN UP</Button>}\r\n\r\n                </div>                \r\n            </nav>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport '../../App.js';\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h2>HOME</h2>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"/games/tictactoe/\"> TicTacToe1 </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/games/tictactoe2/\"> TicTacToe2 </a>\r\n                </li>\r\n\r\n                testestestestes\r\n                <li>\r\n                    <a href=\"/games/test/\"> test</a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a href=\"/games/abcde/\"> ABCDE Game</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <a target='_blank' rel=\"noreferrer\" href=\"https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\">Why it doesnt work</a>\r\n            The pages do not work because it implements a history of the game, which does not work on html5. Should instead consider using hash history. \r\n\r\n\r\n            The tictactoe games will only work offline.\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Component } from 'react';\r\nimport React from 'react'\r\nimport '../../App';\r\nimport { Route } from 'react-router-dom';\r\n\r\n// class test extends React.Component\r\n// {\r\n//     render(){\r\n//         return (\r\n//             <div>\r\n//                 <h2>TEST FILE</h2>\r\n//                 <ul>\r\n//                     <li>\r\n//                         <a href=\"/games/tictactoe\"> TicTacToe1 </a>\r\n//                     </li>\r\n//                     <li>\r\n//                         <a href=\"/games/tictactoe2\"> TicTacToe2 </a>\r\n//                     </li>\r\n    \r\n//                     testestestestes\r\n    \r\n    \r\n//                     <li>\r\n//                         <a href=\"/games/abcde\"> ABCDE Game</a>\r\n//                     </li>\r\n//                 </ul>\r\n    \r\n//                 <a target='_blank' rel=\"noreferrer\" href=\"https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\">Why it doesnt work</a>\r\n//                 The pages do not work because it implements a history of the game, which does not work on html5. Should instead consider using hash history. \r\n    \r\n    \r\n//                 The tictactoe games will only work offline.\r\n    \r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\nfunction test() {\r\n    return (\r\n        <div>\r\n            <h2>TEST FILE</h2>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"/games/tictactoe/\"> TicTacToe1 </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/games/tictactoe2/\"> TicTacToe2 </a>\r\n                </li>\r\n\r\n                testestestestes\r\n\r\n\r\n                <li>\r\n                    <a href=\"/games/abcde/\"> ABCDE Game</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <a target='_blank' rel=\"noreferrer\" href=\"https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\">Why it doesnt work</a>\r\n            The pages do not work because it implements a history of the game, which does not work on html5. Should instead consider using hash history. \r\n\r\n\r\n            The tictactoe games will only work offline.\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default test\r\n","import { Component } from 'react';\r\nimport React from 'react'\r\nimport '../../App.js';\r\n\r\nclass abcde extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)            // must fcall super constructor before using this in derived class constructor\r\n        this.incomingStream = {\r\n            value: '',\r\n            letter: '',\r\n            letterArray: '',\r\n            time: '',\r\n        }\r\n\r\n        this.state = \r\n            {\r\n                typingDisabled:false\r\n            }\r\n        // callback functions, this binding is necessary to make 'this' work in the callback\r\n        this.gameReset = this.gameReset.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.nextLetterIterator = 0\r\n        this.gameStarting = true\r\n        this.runningTime = 0\r\n        this.incrTime = 0\r\n        \r\n        this.alphabet = [\r\n            { letter: 'A ', state: false },\r\n            { letter: 'B ', state: false },\r\n            { letter: 'C ', state: false },\r\n            { letter: 'D ', state: false },\r\n            { letter: 'E ', state: false },\r\n            { letter: 'F ', state: false },\r\n            { letter: 'G ', state: false },\r\n            { letter: 'H ', state: false },\r\n            { letter: 'I ', state: false },\r\n            { letter: 'J ', state: false },\r\n            { letter: 'K ', state: false },\r\n            { letter: 'L ', state: false },\r\n            { letter: 'M ', state: false },\r\n            { letter: 'N ', state: false },\r\n            { letter: 'O ', state: false },\r\n            { letter: 'P ', state: false },\r\n            { letter: 'Q ', state: false },\r\n            { letter: 'R ', state: false },\r\n            { letter: 'S ', state: false },\r\n            { letter: 'T ', state: false },\r\n            { letter: 'U ', state: false },\r\n            { letter: 'V ', state: false },\r\n            { letter: 'W ', state: false },\r\n            { letter: 'X ', state: false },\r\n            { letter: 'Y ', state: false },\r\n            { letter: 'Z ', state: false }\r\n        ]\r\n    }\r\n\r\n\r\n    // do something with the new change\r\n    handleChange(e) {\r\n        this.incomingStream.letter = e.target.value.replace(this.incomingStream.value.at(-1), \"\").toUpperCase()\r\n        this.incomingStream.letterArray = [...this.incomingStream.letterArray, this.incomingStream.letter]\r\n        this.incomingStream.value = [...this.incomingStream.value, e.target.value]\r\n        this.incomingStream.time = [...this.incomingStream.time, e.timeStamp]\r\n\r\n        this.gameLogic()\r\n    }\r\n\r\n    // reset the game \r\n    gameReset() {\r\n        // clear all input fields\r\n        Array.from(document.querySelectorAll(\"input\")).forEach(\r\n            input => (input.value = \"\")\r\n        );\r\n\r\n        // change all in alphabet dictionary to false and red colour\r\n        Object.keys(this.alphabet).map(item => {\r\n            this.alphabet[item].state = false\r\n            this.alphabet[item].time_running = NaN\r\n            this.alphabet[item].time_incr = NaN\r\n        })\r\n        \r\n        this.gameStarting = true\r\n        this.nextLetterIterator = 0\r\n        this.runningTime = 0\r\n        this.incrTime = 0\r\n\r\n        console.log('Your input value is: ' + this.incomingStream.value)\r\n        \r\n        // empty state array\r\n        return(this.setState({\r\n            value: \"\",\r\n            letter: \"\",\r\n            time: \"\",\r\n            typingDisabled: false,\r\n        }))\r\n    }\r\n\r\n\r\n    gameEnd() {\r\n        //\r\n\r\n        // disable typing\r\n        this.setState({typingDisabled: true})\r\n        \r\n        // clear alphabet\r\n        \r\n        // show total time\r\n        // <p>\"Total Time:\" {this.runningTime} </p>\r\n        \r\n        // press to reset game\r\n\r\n        // return{\r\n        //     return(\r\n        //         pass\r\n        //         // <input id='inputField' type=\"text\" onChange={this.handleChange} onKeyUp={this.updateState} disable={true}></input>\r\n        //     )\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    updateState() {\r\n        console.log('updateState now')\r\n        this.setState({1:\"1\"})\r\n    }\r\n\r\n\r\n    // runningTime() {\r\n    //     return new Date().getTime() - this.initialTime\r\n    // }\r\n\r\n    gameLogic() {\r\n        let latestLetter = this.incomingStream.letter\r\n\r\n        // check it is  letter\r\n        console.log(\"letter\", latestLetter, this.nextLetterIterator)\r\n\r\n        // if letter is A, start game\r\n        if(latestLetter === 'A' && this.gameStarting){\r\n            this.initialTime = new Date().getTime()\r\n            this.alphabet[this.nextLetterIterator].state = true\r\n            this.alphabet[this.nextLetterIterator].time_running = 0\r\n            this.alphabet[this.nextLetterIterator].time_incr = 0\r\n            this.nextLetterIterator = this.nextLetterIterator + 1\r\n            this.gameStarting = false \r\n            console.log('start game', this.alphabet, this.initialTime)\r\n        }\r\n\r\n        // if new letter is the expected next letter\r\n        if( (latestLetter + \" \") === this.alphabet[this.nextLetterIterator].letter ) {\r\n            console.log(\"we should only be here if correct: \", latestLetter)\r\n            // if this next letter is not already done\r\n            if( this.alphabet[this.nextLetterIterator - 1].state === true ){\r\n                // timing\r\n                this.incrTime = this.incomingStream.time.at(-1) - this.incomingStream.time[this.incomingStream.time.length - 2]\r\n                this.incrTime = this.incrTime || 0\r\n                this.runningTime = this.runningTime + this.incrTime\r\n\r\n                this.alphabet[this.nextLetterIterator].state = true\r\n                this.alphabet[this.nextLetterIterator].time_running = this.runningTime\r\n                this.alphabet[this.nextLetterIterator].time_incr = this.incrTime\r\n                this.nextLetterIterator = this.nextLetterIterator + 1\r\n                // if new letter is z, then end the game\r\n                if( latestLetter === 'Z' ){\r\n                    console.log('game end')\r\n                    this.gameEnd()\r\n                }\r\n            }\r\n        }\r\n        console.log(\"alphabet\", this.alphabet)\r\n    }\r\n\r\n    setStyle(name, item) {\r\n        if (name === \"alphabetList\") {\r\n            return { color: this.alphabet[item].state ? 'green' : 'red' }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    displayAlphabet() {\r\n        return (\r\n            Object.keys(this.alphabet).map(item => {\r\n                return (\r\n                    <span style={this.setStyle(\"alphabetList\", item)}>\r\n                        {this.alphabet[item].letter}\r\n                    </span>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    displayPerLetterTime() {\r\n        console.log('displayPerLetterTime')\r\n        // return what inside this, .map is a for loop around all of the this.incomingStream.time\r\n        return this.incomingStream.time && this.incomingStream.time.map((_, index) => {\r\n\r\n            // reverse the array\r\n            let time_reverse = this.incomingStream.time[this.incomingStream.time.length - 1 - index]\r\n            let letter_reverse = this.incomingStream.letterArray[this.incomingStream.letterArray.length - 1 - index]\r\n            let prev_time_reverse = this.incomingStream.time[this.incomingStream.time.length - 2 - index]\r\n\r\n            if ((this.incomingStream.time.length - 1 - index) === 0 ) {\r\n                time_reverse = 0\r\n                prev_time_reverse = 0\r\n            }\r\n\r\n            return (\r\n                <ul id='LetterTime'>\r\n                    {letter_reverse} - {time_reverse - prev_time_reverse}\r\n                </ul>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>ALPHABET GAME</h2>\r\n\r\n                <h3>The goal of this game is to see how fast a person can type the english alphabet</h3>\r\n\r\n                <button \r\n                    id='gameReset' \r\n                    type=\"submit\" \r\n                    onClick={this.gameReset} \r\n                >\r\n                    Reset Game\r\n                </button>\r\n\r\n                <div id='alphabet' onKeyUp={this.displayAlphabet()}></div>\r\n                {this.displayAlphabet()}\r\n\r\n                <br></br>\r\n                {/* <input id='inputField' type=\"text\" onChange={this.handleChange} ref={(input) => this.myinput = input} /> */}\r\n                {/* <input id='inputField' type=\"text\" onChange={this.handleChange} ></input> */}\r\n                <input \r\n                    id='inputField' \r\n                    type=\"text\" \r\n                    onChange={this.handleChange} \r\n                    onKeyUp={this.updateState}\r\n                    disabled={(this.state.typingDisabled)? \"disabled\" : \"\"}\r\n                />\r\n\r\n                <ul>{this.incomingStream.letterArray.at(-1)}  {this.incomingStream.time.at(-1)}</ul>\r\n\r\n                <br></br>\r\n                ---\r\n                <br></br>\r\n\r\n                {this.displayPerLetterTime()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default abcde\r\n","import React from 'react';\r\nimport '../TicTacToe.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TicTacToe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {\r\n                    squares: Array(9).fill(null)\r\n                }\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: history.concat([\r\n                {\r\n                    squares: squares\r\n                }\r\n            ]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        return (\r\n            <div className=\"tictactoe\">\r\n                <div className=\"tictactoe-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={i => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"tictactoe-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TicTacToe;","import React from 'react';\r\nimport Navbar from './components/Navbar.js';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/pages/Home'\r\nimport test from './components/pages/test';\r\nimport abcde from './components/pages/abcde';\r\nimport TicTacToe from './components/pages/TicTacToe';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n\r\n    {/* Router contains all of the routes for the pages/paths */}\r\n    <Router>\r\n      <Navbar />\r\n      \r\n      <Switch>\r\n\r\n        {/* exact will send you to home */}\r\n        <Route path='/games/' exact component={Home}/>\r\n        <Route path='/games/test/'  component={test}/>\r\n        <Route path='/games/abcde/'  component={abcde}/>\r\n        <Route path='/games/TicTacToe/'  component={TicTacToe}/>\r\n      </Switch>\r\n\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}