{"version":3,"sources":["TicTacToe.js","Home.js","test.js","abcde.js","App.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","TicTacToe","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","Home","href","target","rel","test","abcde","incomingStream","letter","letterArray","time","typingDisabled","gameReset","bind","handleChange","updateState","nextLetterIterator","gameStarting","runningTime","incrTime","alphabet","e","replace","at","toUpperCase","timeStamp","gameLogic","from","document","querySelectorAll","forEach","input","Object","keys","item","time_running","NaN","time_incr","console","log","1","latestLetter","initialTime","Date","getTime","gameEnd","name","color","style","setStyle","_","index","time_reverse","letter_reverse","prev_time_reverse","id","type","onKeyUp","displayAlphabet","onChange","disabled","displayPerLetterTime","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.519710bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TicTacToe.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TicTacToe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {\r\n                    squares: Array(9).fill(null)\r\n                }\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: history.concat([\r\n                {\r\n                    squares: squares\r\n                }\r\n            ]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        return (\r\n            <div className=\"tictactoe\">\r\n                <div className=\"tictactoe-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={i => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"tictactoe-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TicTacToe;","import React from 'react'\r\nimport './App.js';\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h2>HOME</h2>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"/games/tictactoe\"> TicTacToe1 </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/games/tictactoe2\"> TicTacToe2 </a>\r\n                </li>\r\n\r\n                testestestestes\r\n\r\n\r\n                <li>\r\n                    <a href=\"/games/abcde\"> ABCDE Game</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <a target='_blank' rel=\"noreferrer\" href=\"https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\">Why it doesnt work</a>\r\n            The pages do not work because it implements a history of the game, which does not work on html5. Should instead consider using hash history. \r\n\r\n\r\n            The tictactoe games will only work offline.\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Component } from 'react';\r\nimport React from 'react'\r\nimport './App.js';\r\n\r\n\r\nfunction test() {\r\n    return (\r\n        <div>\r\n            <h2>HOME</h2>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"/games/tictactoe\"> TicTacToe1 </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/games/tictactoe2\"> TicTacToe2 </a>\r\n                </li>\r\n\r\n                testestestestes\r\n\r\n\r\n                <li>\r\n                    <a href=\"/games/abcde\"> ABCDE Game</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <a target='_blank' rel=\"noreferrer\" href=\"https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\">Why it doesnt work</a>\r\n            The pages do not work because it implements a history of the game, which does not work on html5. Should instead consider using hash history. \r\n\r\n\r\n            The tictactoe games will only work offline.\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default test\r\n","import { Component } from 'react';\r\nimport React from 'react'\r\nimport './App.js';\r\n\r\nclass abcde extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)            // must fcall super constructor before using this in derived class constructor\r\n        this.incomingStream = {\r\n            value: '',\r\n            letter: '',\r\n            letterArray: '',\r\n            time: '',\r\n        }\r\n\r\n        this.state = \r\n            {\r\n                typingDisabled:false\r\n            }\r\n        // callback functions, this binding is necessary to make 'this' work in the callback\r\n        this.gameReset = this.gameReset.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.nextLetterIterator = 0\r\n        this.gameStarting = true\r\n        this.runningTime = 0\r\n        this.incrTime = 0\r\n        \r\n        this.alphabet = [\r\n            { letter: 'A ', state: false },\r\n            { letter: 'B ', state: false },\r\n            { letter: 'C ', state: false },\r\n            { letter: 'D ', state: false },\r\n            { letter: 'E ', state: false },\r\n            { letter: 'F ', state: false },\r\n            { letter: 'G ', state: false },\r\n            { letter: 'H ', state: false },\r\n            { letter: 'I ', state: false },\r\n            { letter: 'J ', state: false },\r\n            { letter: 'K ', state: false },\r\n            { letter: 'L ', state: false },\r\n            { letter: 'M ', state: false },\r\n            { letter: 'N ', state: false },\r\n            { letter: 'O ', state: false },\r\n            { letter: 'P ', state: false },\r\n            { letter: 'Q ', state: false },\r\n            { letter: 'R ', state: false },\r\n            { letter: 'S ', state: false },\r\n            { letter: 'T ', state: false },\r\n            { letter: 'U ', state: false },\r\n            { letter: 'V ', state: false },\r\n            { letter: 'W ', state: false },\r\n            { letter: 'X ', state: false },\r\n            { letter: 'Y ', state: false },\r\n            { letter: 'Z ', state: false }\r\n        ]\r\n    }\r\n\r\n\r\n    // do something with the new change\r\n    handleChange(e) {\r\n        this.incomingStream.letter = e.target.value.replace(this.incomingStream.value.at(-1), \"\").toUpperCase()\r\n        this.incomingStream.letterArray = [...this.incomingStream.letterArray, this.incomingStream.letter]\r\n        this.incomingStream.value = [...this.incomingStream.value, e.target.value]\r\n        this.incomingStream.time = [...this.incomingStream.time, e.timeStamp]\r\n\r\n        this.gameLogic()\r\n    }\r\n\r\n    // reset the game \r\n    gameReset() {\r\n        // clear all input fields\r\n        Array.from(document.querySelectorAll(\"input\")).forEach(\r\n            input => (input.value = \"\")\r\n        );\r\n\r\n        // change all in alphabet dictionary to false and red colour\r\n        Object.keys(this.alphabet).map(item => {\r\n            this.alphabet[item].state = false\r\n            this.alphabet[item].time_running = NaN\r\n            this.alphabet[item].time_incr = NaN\r\n        })\r\n        \r\n        this.gameStarting = true\r\n        this.nextLetterIterator = 0\r\n        this.runningTime = 0\r\n        this.incrTime = 0\r\n\r\n        console.log('Your input value is: ' + this.incomingStream.value)\r\n        \r\n        // empty state array\r\n        return(this.setState({\r\n            value: \"\",\r\n            letter: \"\",\r\n            time: \"\",\r\n            typingDisabled: false,\r\n        }))\r\n    }\r\n\r\n\r\n    gameEnd() {\r\n        //\r\n\r\n        // disable typing\r\n        this.setState({typingDisabled: true})\r\n        \r\n        // clear alphabet\r\n        \r\n        // show total time\r\n        // <p>\"Total Time:\" {this.runningTime} </p>\r\n        \r\n        // press to reset game\r\n\r\n        // return{\r\n        //     return(\r\n        //         pass\r\n        //         // <input id='inputField' type=\"text\" onChange={this.handleChange} onKeyUp={this.updateState} disable={true}></input>\r\n        //     )\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    updateState() {\r\n        console.log('updateState now')\r\n        this.setState({1:\"1\"})\r\n    }\r\n\r\n\r\n    // runningTime() {\r\n    //     return new Date().getTime() - this.initialTime\r\n    // }\r\n\r\n    gameLogic() {\r\n        let latestLetter = this.incomingStream.letter\r\n\r\n        // check it is  letter\r\n        console.log(\"letter\", latestLetter, this.nextLetterIterator)\r\n\r\n        // if letter is A, start game\r\n        if(latestLetter === 'A' && this.gameStarting){\r\n            this.initialTime = new Date().getTime()\r\n            this.alphabet[this.nextLetterIterator].state = true\r\n            this.alphabet[this.nextLetterIterator].time_running = 0\r\n            this.alphabet[this.nextLetterIterator].time_incr = 0\r\n            this.nextLetterIterator = this.nextLetterIterator + 1\r\n            this.gameStarting = false \r\n            console.log('start game', this.alphabet, this.initialTime)\r\n        }\r\n\r\n        // if new letter is the expected next letter\r\n        if( (latestLetter + \" \") === this.alphabet[this.nextLetterIterator].letter ) {\r\n            console.log(\"we should only be here if correct: \", latestLetter)\r\n            // if this next letter is not already done\r\n            if( this.alphabet[this.nextLetterIterator - 1].state === true ){\r\n                // timing\r\n                this.incrTime = this.incomingStream.time.at(-1) - this.incomingStream.time[this.incomingStream.time.length - 2]\r\n                this.incrTime = this.incrTime || 0\r\n                this.runningTime = this.runningTime + this.incrTime\r\n\r\n                this.alphabet[this.nextLetterIterator].state = true\r\n                this.alphabet[this.nextLetterIterator].time_running = this.runningTime\r\n                this.alphabet[this.nextLetterIterator].time_incr = this.incrTime\r\n                this.nextLetterIterator = this.nextLetterIterator + 1\r\n                // if new letter is z, then end the game\r\n                if( latestLetter === 'Z' ){\r\n                    console.log('game end')\r\n                    this.gameEnd()\r\n                }\r\n            }\r\n        }\r\n        console.log(\"alphabet\", this.alphabet)\r\n    }\r\n\r\n    setStyle(name, item) {\r\n        if (name === \"alphabetList\") {\r\n            return { color: this.alphabet[item].state ? 'green' : 'red' }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    displayAlphabet() {\r\n        return (\r\n            Object.keys(this.alphabet).map(item => {\r\n                return (\r\n                    <span style={this.setStyle(\"alphabetList\", item)}>\r\n                        {this.alphabet[item].letter}\r\n                    </span>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    displayPerLetterTime() {\r\n        console.log('displayPerLetterTime')\r\n        // return what inside this, .map is a for loop around all of the this.incomingStream.time\r\n        return this.incomingStream.time && this.incomingStream.time.map((_, index) => {\r\n\r\n            // reverse the array\r\n            let time_reverse = this.incomingStream.time[this.incomingStream.time.length - 1 - index]\r\n            let letter_reverse = this.incomingStream.letterArray[this.incomingStream.letterArray.length - 1 - index]\r\n            let prev_time_reverse = this.incomingStream.time[this.incomingStream.time.length - 2 - index]\r\n\r\n            if ((this.incomingStream.time.length - 1 - index) === 0 ) {\r\n                time_reverse = 0\r\n                prev_time_reverse = 0\r\n            }\r\n\r\n            return (\r\n                <ul id='LetterTime'>\r\n                    {letter_reverse} - {time_reverse - prev_time_reverse}\r\n                </ul>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>ALPHABET GAME</h2>\r\n\r\n                <h3>The goal of this game is to see how fast a person can type the english alphabet</h3>\r\n\r\n                <button \r\n                    id='gameReset' \r\n                    type=\"submit\" \r\n                    onClick={this.gameReset} \r\n                >\r\n                    Reset Game\r\n                </button>\r\n\r\n                <div id='alphabet' onKeyUp={this.displayAlphabet()}></div>\r\n                {this.displayAlphabet()}\r\n\r\n                <br></br>\r\n                {/* <input id='inputField' type=\"text\" onChange={this.handleChange} ref={(input) => this.myinput = input} /> */}\r\n                {/* <input id='inputField' type=\"text\" onChange={this.handleChange} ></input> */}\r\n                <input \r\n                    id='inputField' \r\n                    type=\"text\" \r\n                    onChange={this.handleChange} \r\n                    onKeyUp={this.updateState}\r\n                    disabled={(this.state.typingDisabled)? \"disabled\" : \"\"}\r\n                />\r\n\r\n                <ul>{this.incomingStream.letterArray.at(-1)}  {this.incomingStream.time.at(-1)}</ul>\r\n\r\n                <br></br>\r\n                ---\r\n                <br></br>\r\n\r\n                {this.displayPerLetterTime()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default abcde\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport TicTacToe from './TicTacToe.js';\r\nimport Home from './Home.js';\r\nimport test from './test.js';\r\nimport abcde from './abcde.js';\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n\r\n        {/* Router contains all of the routes for the pages/paths */}\r\n        <Router>    \r\n            <div>\r\n                <h1>GAMES</h1>\r\n            </div>\r\n\r\n            <Switch>\r\n                <Route path='/games/' exact component={Home} />\r\n                <Route path='/games/tictactoe/'><TicTacToe /></Route>           {/* uses a route method to get the path to the site */}\r\n                <Route path='/games/tictactoe2/' component={TicTacToe} />       {/* uses a component method to get the path to the site */}\r\n                <Route path='/games/abcde/' component={abcde} />       {/* uses a component to a function method to get the path to the site */}\r\n                <Route path='/games/test/' component={test} />       {/* uses a component to a function method to get the path to the site */}\r\n\r\n\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App';\r\nimport App from './App';\r\nimport './TicTacToe';\r\n\r\nReactDOM.render(\r\n  <App />, \r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}